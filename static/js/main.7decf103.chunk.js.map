{"version":3,"sources":["components/Button.js","components/ButtonPanel.js","components/Display.js","Logic/Operate.js","Logic/Calculate.js","Logic/isNumber.js","components/App.js","index.js"],"names":["Button","handleClick","props","clickHandler","name","className","this","orange","wide","join","trim","onClick","React","Component","ButtonPanel","buttonName","Display","value","operate","numberOne","numberTwo","operation","one","Big","two","plus","toString","minus","times","e","alert","div","Error","calculate","obj","total","next","test","result","includes","App","state","console","log","setState","ReactDom","render","document","getElementById"],"mappings":"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","file":"static/js/main.7decf103.chunk.js","sourcesContent":["import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport \"../Styles/Button.css\";\r\n\r\nexport default class Button extends React.Component {\r\n  static propTypes = {\r\n    name: PropTypes.string,\r\n    orange: PropTypes.bool,\r\n    wide: PropTypes.bool,\r\n    clickHandler: PropTypes.func,\r\n  };\r\n\r\n  handleClick = () => {\r\n    this.props.clickHandler(this.props.name);\r\n  };\r\n\r\n  render() {\r\n    const className = [\r\n      \"component-button\",\r\n      this.props.orange ? \"orange\" : \"\",\r\n      this.props.wide ? \"wide\" : \"\",\r\n    ];\r\n\r\n    return (\r\n      <div className={className.join(\" \").trim()}>\r\n        <button onClick={this.handleClick}>{this.props.name}</button>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import Button from \"./Button\";\r\nimport React from \"react\";\r\n\r\nimport \"../Styles/ButtonPanel.css\";\r\n\r\nexport default class ButtonPanel extends React.Component {\r\n  handleClick = (buttonName) => {\r\n    this.props.clickHandler(buttonName);\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"component-button-panel\">\r\n        <div>\r\n          <Button name=\"AC\" clickHandler={this.handleClick} />\r\n          <Button name=\"+/-\" clickHandler={this.handleClick} />\r\n          <Button name=\"%\" clickHandler={this.handleClick} />\r\n          <Button name=\"รท\" clickHandler={this.handleClick} orange />\r\n        </div>\r\n        <div>\r\n          <Button name=\"7\" clickHandler={this.handleClick} />\r\n          <Button name=\"8\" clickHandler={this.handleClick} />\r\n          <Button name=\"9\" clickHandler={this.handleClick} />\r\n          <Button name=\"x\" clickHandler={this.handleClick} orange />\r\n        </div>\r\n        <div>\r\n          <Button name=\"4\" clickHandler={this.handleClick} />\r\n          <Button name=\"5\" clickHandler={this.handleClick} />\r\n          <Button name=\"6\" clickHandler={this.handleClick} />\r\n          <Button name=\"-\" clickHandler={this.handleClick} orange />\r\n        </div>\r\n        <div>\r\n          <Button name=\"1\" clickHandler={this.handleClick} />\r\n          <Button name=\"2\" clickHandler={this.handleClick} />\r\n          <Button name=\"3\" clickHandler={this.handleClick} />\r\n          <Button name=\"+\" clickHandler={this.handleClick} orange />\r\n        </div>\r\n        <div>\r\n          <Button name=\"0\" clickHandler={this.handleClick} />\r\n          <Button name=\"00\" clickHandler={this.handleClick} />\r\n          <Button name=\".\" clickHandler={this.handleClick} />\r\n          <Button name=\"=\" clickHandler={this.handleClick} orange />\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nimport \"../Styles/Display.css\";\r\n\r\nexport default class Display extends React.Component {\r\n  static propTypes = {\r\n    value: PropTypes.string,\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"component-display\">\r\n        <div>{this.props.value}</div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import Big from \"big.js\";\r\n\r\nexport default function operate(numberOne, numberTwo, operation) {\r\n  const one = Big(numberOne || \"0\");\r\n  const two = Big(\r\n    numberTwo || (operation === \"รท\" || operation === \"x\" ? \"1\" : \"0\")\r\n  ); //If dividing or multiplying, then 1 maintains current value in cases of null\r\n  if (operation === \"+\") {\r\n    return one.plus(two).toString();\r\n  }\r\n  if (operation === \"-\") {\r\n    return one.minus(two).toString();\r\n  }\r\n  if (operation === \"x\") {\r\n    return one.times(two).toString();\r\n  }\r\n  if (operation === \"รท\") {\r\n    if (two.e === 0 || numberTwo === \"00\") {\r\n      alert(\"Divide by 0 error\");\r\n      return \"0\";\r\n    } else {\r\n      return one.div(two).toString();\r\n    }\r\n  }\r\n  throw Error(`Unknown operation '${operation}'`);\r\n}\r\n","import isNumber from \"./isNumber\";\r\nimport operate from \"./Operate\";\r\nimport Big from \"big.js\";\r\n\r\nexport default function calculate(obj, buttonName) {\r\n  if (buttonName === \"AC\") {\r\n    return {\r\n      total: null,\r\n      next: null,\r\n      operation: null,\r\n    };\r\n  }\r\n\r\n  if (isNumber(buttonName)) {\r\n    if (buttonName === \"0\" && obj.next === \"0\") {\r\n      return {};\r\n    }\r\n    if (obj.operation) {\r\n      if (obj.next) {\r\n        return {\r\n          next: obj.next + buttonName,\r\n        };\r\n      }\r\n      return {\r\n        next: buttonName,\r\n      };\r\n    }\r\n    if (obj.next) {\r\n      const next = obj.next === \"0\" ? buttonName : obj.next + buttonName;\r\n      return {\r\n        next,\r\n        total: null,\r\n      };\r\n    }\r\n    return {\r\n      next: buttonName,\r\n      total: null,\r\n    };\r\n  }\r\n\r\n  if (buttonName === \"%\") {\r\n    if (obj.operation && obj.next) {\r\n      const result = operate(obj.total, obj.next, obj.operation);\r\n      return {\r\n        total: Big(result).div(Big(\"100\")).toString(),\r\n        next: null,\r\n        operation: null,\r\n      };\r\n    }\r\n    if (obj.next) {\r\n      return {\r\n        next: Big(obj.next).div(Big(\"100\")).toString(),\r\n      };\r\n    }\r\n    return {};\r\n  }\r\n\r\n  if (buttonName === \".\") {\r\n    if (obj.next) {\r\n      // if '.' already exists then ignore\r\n      if (obj.next.includes(\".\")) {\r\n        return {};\r\n      }\r\n      return {\r\n        next: obj.next + \".\",\r\n      };\r\n    }\r\n    return { next: \"0.\" };\r\n  }\r\n\r\n  if (buttonName === \"=\") {\r\n    if (obj.next && obj.operation) {\r\n      return {\r\n        total: operate(obj.total, obj.next, obj.operation),\r\n        next: null,\r\n        operation: null,\r\n      };\r\n    } else {\r\n      // '=' with no operation, nothing to do\r\n      return {};\r\n    }\r\n  }\r\n\r\n  // User pressed an operation button and there is an existing operation\r\n  if (obj.operation) {\r\n    return {\r\n      total: operate(obj.total, obj.next, obj.operation),\r\n      next: null,\r\n      operation: buttonName,\r\n    };\r\n  }\r\n\r\n  // no operation yet, but the user typed one\r\n\r\n  // The user hasn't typed a number yet, just save the operation\r\n  if (!obj.next) {\r\n    return {\r\n      operation: buttonName,\r\n    };\r\n  }\r\n\r\n  //   return { next: \"4\" };\r\n  return {\r\n    total: obj.next,\r\n    next: null,\r\n    operation: buttonName,\r\n  };\r\n}\r\n","export default function isNumber(item) {\r\n  return /[0-9]+/.test(item);\r\n}\r\n","import React from \"react\";\r\nimport ButtonPanel from \"./ButtonPanel\";\r\nimport Display from \"./Display\";\r\nimport calculate from \"../Logic/Calculate\";\r\nimport \"../Styles/App.css\";\r\n\r\nclass App extends React.Component {\r\n  state = {\r\n    total: null,\r\n    next: null,\r\n    operation: null,\r\n  };\r\n\r\n  handleClick = (buttonName) => {\r\n    console.log(buttonName);\r\n    this.setState(calculate(this.state, buttonName));\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"component-app\">\r\n        <Display value={this.state.next || this.state.total || \"0\"} />\r\n        <ButtonPanel clickHandler={this.handleClick} />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","import React from \"react\";\r\nimport ReactDom from \"react-dom\";\r\nimport App from \"./components/App\";\r\nimport \"./index.css\";\r\n\r\nReactDom.render(<App />, document.getElementById(\"root\"));\r\n"],"sourceRoot":""}